/* style.css */

/* Базовые стили таблицы */
table {
    width: 100%;
    border-collapse: collapse;
    margin-top: 0;
    font-family: sans-serif;
    color: #333;
    table-layout: auto;
    overflow-x: auto;
}

/* Стили ячеек и заголовков */
th, td {
    border: 1px solid #ddd;
    padding: 0.7em;
    text-align: center;
}

/* Стили шапки таблицы */
thead th {
    background-color: #e9e9e9	; /* <--- Измените на более внятный синий (или другой цвет) */
    font-weight: bold;
    color: #333; /* <--- Возможно, измените цвет текста для контраста */
    padding: 1em 0.7em;
}



/* Стили подвала таблицы */
tfoot td {
    font-weight: bold;
    background-color: #F7F21A; /* <--- Измените на желтый цвет (или другой по вкусу) */
    border-top: 2px solid #ccc;
}

/* Чередование цветов строк (зебра) */
tbody tr:nth-child(even) {
    background-color: #f9f9f9;
}

/* Эффект при наведении на строку */
tbody tr:hover {
    background-color: #e0f2f7;
}

/* Стили полей ввода внутри ячеек */
td input[type="text"] {
    padding: 0.5em;
    box-sizing: border-box;
    border: 1px solid #ccc;
    border-radius: 4px;
    font-size: 1em;
    font-family: inherit;
    color: #333;
    margin: 0;
    vertical-align: middle;
}

/* Убираем стандартную рамку при фокусе и добавляем свою */
td input[type="text"]:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
}

/* Специфичный стиль для поля НАИМЕНОВАНИЯ */
td input.name-input {
    display: block;
    width: 100%;
    text-align: left;
    min-width: 450px;
}

/* Специфичный стиль для поля КОЛИЧЕСТВА - ФИКСИРОВАННАЯ ШИРИНА */
td input.qty-input {
     display: inline-block;
     width: 10ch;
     text-align: center;
}
/* style.css */

/* ... (существующие стили) ... */

/* Стили для индикатора статуса сети (Онлайн/Оффлайн) */
#network-status {
    position: fixed;
    bottom: 80px; /* Выше FAB */
    right: 20px;
    padding: 5px 10px;
    border-radius: 4px;
    font-size: 0.9em;
    font-weight: bold;
    z-index: 1001; /* Выше FAB, но ниже overlay/sidebar-toggle */
    display: none; /* Скрыто по умолчанию, показывается JS */
    transition: background-color 0.3s ease, color 0.3s ease, bottom 0.3s ease, right 0.3s ease;
}

/* Добавляем смещение индикатора при открытом сайдбаре */
body.sidebar-open #network-status {
     left: 320px; /* Смещаем так же, как и FAB */
     right: auto;
}

#app-header {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    background-color: #343a40; /* Цвет фона как у старых .action-buttons или другой */
    padding: 10px;             /* Отступы как у старых .action-buttons или другие */
    z-index: 1010;             /* Убедитесь, что это значение согласуется с z-index других элементов (например, .menu-toggle-btn имеет 1100, side-menu 1050) */
    display: flex;
    justify-content: flex-end; /* Размещает .action-buttons справа */
    align-items: center;       /* Выравнивает элементы по центру по вертикали */
    box-sizing: border-box;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1); /* Небольшая тень для выделения хедера */

}
#app-header .header-left {
    /* flex-basis: auto; /* Базовый размер по содержимому */
    flex-grow: 0;     /* Не разрешаем ему расти */
    flex-shrink: 0;   /* Не разрешаем ему сжиматься */
    align-items: center; /* Сохраняем вертикальное выравнивание */
	
}

#app-header .header-right {
    flex-grow: 1;
    flex-shrink: 1;
    align-items: center;
}
#app-footer {
    position: fixed;
    bottom: 0;
    left: 0;
    width: 100%;
    background-color: #343a40; /* Цвет фона как у body или другой */
    padding: 10px;
    z-index: 1010;
    display: flex;
    justify-content: center; /* Размещает .fab справа */
    align-items: center;       /* Выравнивает .fab по центру по вертикали */
    box-sizing: border-box;
    border-top: 1px solid #dee2e6; /* Тонкая линия сверху для отделения футера */
}
/* Стили кнопки удаления */


/* Стили Floating Action Button (FAB) */
/* --- Floating Action Button (FAB) Styles --- */
/* Изменяем селектор с .fab на body .fab для увеличения специфичности */
#app-footer .fab { /* Или просто .fab, если нет конфликтов. Этот селектор более специфичен */
    position: static;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background: #007bff;
    color: #fff;
    font-size: 2em;
    cursor: pointer;
    box-shadow: 0 4px 8px rgba(0,0,0,0.4);
    transition: all 0.3s ease-in-out, left 0.3s ease; /* Включаем left в плавный переход */
    display: flex;
    justify-content: center; /* Центрирование по горизонтали */
    align-items: center;   /* Центрирование по вертикали */
}
body .fab {
    position: static; /* Гарантированно убираем fixed */
    top: auto;
    right: auto;
    bottom: auto;
    left: auto;
    z-index: auto;
}
.header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; /* Занимаем всю доступную ширину */
}
/* Эффект при наведении */
body .fab:hover {
    background-color: #0056b3;
    box-shadow: 0 6px 12px rgba(0,0,0,0.5);
    transform: scale(1.1);
}

/* Эффект при нажатии */
body .fab:active {
    transform: scale(0.9);
    box-shadow: 0 2px 4px rgba(0,0,0,0.5);
}

/* --- Styles for Sidebar Open State (Affecting FAB) --- */
/* Селектор также должен быть более специфичным */
body.sidebar-open .fab {
   /* Shift FAB to the right when sidebar is open */
   /* Sidebar width is 300px. Let's position it 20px from the sidebar edge. */
   left: 320px; /* 300px (sidebar width) + 20px (gap) */
   right: auto; /* Unset right property */
   /* transform: none; /* Можно убрать transform: scale при открытии меню, если нужно */
}
	
.delete-btn {
    cursor: pointer;
    color: #ccc;
    font-weight: bold;
    padding: 0 0.3em;
    display: inline-block;
    transition: color 0.2s ease-in-out;
    vertical-align: middle;
}

/* Эффект при наведении на кнопку удаления */
.delete-btn:hover {
    color: #dc3545;
}
/* Эффект при наведении на FAB */
.fab:hover {
    background-color: #0056b3;
    box-shadow: 0 6px 12px rgba(0,0,0,0.5);
    transform: scale(1.1);
}

/* Эффект при нажатии на FAB */
.fab:active {
    transform: scale(0.9);
    box-shadow: 0 2px 4px rgba(0,0,0,0.5);
}
/* style.css */

/* ... (существующие стили до кнопки экспорта без изменений) ... */

/* Стили для кнопки экспорта */
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 1em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

button#export-csv:hover {
    background-color: #218838; /* Темнее при наведении */
}

button#export-csv:active {
    background-color: #1e7e34; /* Еще темнее при нажатии */
}


/* Стили для кнопки печати */
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 1em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}

button#print-table:hover {
    background-color: #0056b3;
}

button#print-table:active {
    background-color: #004085;
}

/* style.css */

/* ... (существующие стили до кнопки экспорта без изменений) ... */

/* Стили для кнопки экспорта */
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 1em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}

button#export-csv:hover {
    background-color: #218838; /* Темнее при наведении */
}

button#export-csv:active {
    background-color: #1e7e34; /* Еще темнее при нажатии */
}

/* Стили для кнопки печати */
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 1em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}

button#print-table:hover {
    background-color: #0056b3;
}

button#print-table:active {
    background-color: #004085;
}

/* Стили для кнопки снимка */
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 1em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}

button#snapshot-table:hover {
    background-color: #5a6268;
}

button#snapshot-table:active {
    background-color: #545b62;
}
.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 100%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

.print-header-text .print-date {
    font-size: 0.9em;
    color: #555;
    text-align: left;
    flex-basis: 0; /* Начинаем с нулевого базового размера */
    flex-grow: 1; /* <--- Позволяем этому элементу "вырасти" */
    flex-shrink: 1;
}

.print-header-text .company-name {
    font-size: 1.8em;
    font-weight: bold;
    color: #333;
    text-align: center; /* Центрируем текст внутри span */
    flex-basis: auto; /* Базовый размер определяется содержимым */
    flex-grow: 0; /* <--- Не даем этому элементу "вырасти", чтобы оно оставалось по центру */
    flex-shrink: 0; /* Предотвращаем сжатие */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    /* Опционально: установить минимальную ширину, если нужно */
    /* min-width: 150px; */
}

/* Стили для элемента-заполнителя справа */
.print-header-text .print-right-filler {
     flex-basis: 0; /* Начинаем с нулевого базового размера */
     flex-grow: 1; /* <--- Позволяем этому элементу "вырасти" так же, как и дате */
     flex-shrink: 1;
}

/* --- СТИЛИ ДЛЯ ПЕЧАТИ --- */


    .print-header-text {
        display: flex !important; /* Убедимся, что flexbox активен */
        /* justify-content: space-between; */ /* <--- Возможно, убрать или изменить */
        justify-content: center; /* Центрируем содержимое */
        align-items: center;
        width: 100%;
        margin-top: 1em !important;
        margin-bottom: 1em !important;
    }

    .print-header-text .print-date {
         font-size: 0.9em !important;
         color: #555 !important;
         text-align: left !important;
         flex-basis: 0 !important;
         flex-grow: 1 !important; /* <--- Позволяем "вырасти" */
         flex-shrink: 1 !important;
    }

    .print-header-text .company-name {
         font-size: 1.8em !important;
         font-weight: bold !important;
         color: #333 !important;
         text-align: center !important;
         flex-basis: auto !important;
         flex-grow: 0 !important; /* <--- Не даем "вырасти", чтобы оно оставалось по центру */
         flex-shrink: 0 !important;
          white-space: nowrap;
          overflow: hidden;
          text-overflow: ellipsis;
          /* min-width: 150px !important; */ /* Опционально */
    }

    /* Стили для элемента-заполнителя справа при печати */
    .print-header-text .print-right-filler {
         flex-basis: 0 !important;
         flex-grow: 1 !important; /* <--- Позволяем "вырасти" */
         flex-shrink: 1 !important;
    }

/* --- СТИЛИ ДЛЯ ПЕЧАТИ --- */
@media print {
    /* Скрываем элементы, которые не нужны при печати */
    body {
        background-color: #fff !important; /* Белый фон */
        -webkit-print-color-adjust: exact; /* Печать точных цветов */
        color-adjust: exact;
        /* Убираем любые margin/padding/min-height, которые могут быть установлены для экрана */
        margin: 0 !important;
        padding: 0 !important;
        min-height: 0 !important;
        height: auto !important;
        max-height: none !important; /* Нет максимальной высоты */		
        overflow: visible !important; /* Убедимся, что body не скрывает контент */
        position: static !important; /* Убираем возможное позиционирование */
    }
    tbody {
        /* *** ДОБАВЛЯЕМ/ИЗМЕНЯЕМ ЭТИ СВОЙСТВА ДЛЯ ВЕРТИКАЛЬНОГО РАСТЯГИВАНИЯ TBODY *** */
        height: auto !important; /* Высота подстраивается под содержимое */
        max-height: none !important; /* Нет максимальной высоты */
        overflow: visible !important; /* Контент не скрывается по вертикали */
        /* ********************************************************************* */
    }
    html {
        margin: 0 !important;
        padding: 0 !important;
        min-height: 0 !important;
        height: auto !important;
    }
    button#snapshot-table {
        display: none !important;
    }
    #network-status {
        display: none !important;
    }
    .fab,
    button#export-csv,
    button#print-table,
    .suggestions-dropdown
    {
       display: none !important;
    }

    /* Устраняем зазор последнего столбца при печати */
    tbody td:last-child,
    thead th:last-child {
        display: none !important;
    }

    tfoot td:last-child {
       display: none !important;
    }
    /* Убеждаемся, что таблица и ячейки печатаются с рамками */
    table, th, td {
        border: 1px solid #000 !important;
        padding: 0.5em !important; /* Возвращаем стандартный padding для остальных ячеек */
	    border-collapse: collapse !important;
    }
    table {
       width: 100% !important;
       page-break-inside: auto;
      border-collapse: collapse !important;
  }
    thead {
        display: table-row-group !important; /* Меняем с table-header-group */
        /* Это должно заставить его отобразиться только один раз в начале таблицы */
        /* Дополнительные свойства для контроля разрыва страниц после шапки */
        page-break-after: avoid !important;
        break-after: avoid !important; /* Современное свойство */
    }

     /* Пытаемся предотвратить повторение подвала и разместить его в конце */
    tfoot {
        display: table-row-group !important; /* Меняем с table-footer-group */
        /* Это должно поместить подвал после всех строк tbody в потоке */
        /* Дополнительные свойства для контроля разрыва страниц перед подвалом */
        page-break-before: avoid !important;
        break-before: avoid !important; /* Современное свойство */
    }

    thead th {
        background-color: #f2f2f2 !important;
    }

    tbody tr:nth-child(even) {
         background-color: #f9f9f9 !important;
    }

    tbody tr {
        page-break-inside: avoid !important;
        break-inside: avoid !important; /* Современное свойство */
    }

    tfoot td {
        background-color: #F7F21A !important;
    }
/* Правило для выравнивания второй ячейки подвала по левому краю */
    tfoot td:nth-child(2) {
        text-align: left;
    }
    /* Убеждаемся, что значения из полей ввода видны при печати */
    input[type="text"] {
        border: none !important;
        background-color: transparent !important;
        padding: 0 !important;
        margin: 0 !important;
        box-shadow: none !important;
        color: #000 !important;
        -webkit-print-color-adjust: exact;
        color-adjust: exact;
        /* Убираем общие правила ширины, чтобы специфичные классы могли применить свою ширину */
        width: auto !important;
    }
    tbody input[type="text"], /* Поле "Наименование" */
    tbody input[type="number"] /* Поле "Количество" (если у него type="number", иначе тоже type="text") */
    {
        font-family: inherit !important; /* Наследуем шрифт от родительской ячейки */
        font-size: inherit !important; /* Наследуем размер шрифта */
        font-weight: normal !important; /* Или bold, если остальной текст жирный */
        color: inherit !important; /* Наследуем цвет текста */
        border: none !important; /* Убираем границы полей ввода */
        background-color: transparent !important; /* Убираем фон полей ввода */
        box-shadow: none !important; /* Убираем тени, если есть */
        padding: 0 !important; /* Убираем внутренние отступы полей ввода, чтобы текст плотно прилегал к рамкам ячейки */
        margin: 0 !important; /* Убираем внешние отступы */
        width: 100% !important; /* Поле ввода занимает всю ширину ячейки */
        box-sizing: border-box !important; /* Учитываем padding/border в общей ширине */
        text-align: inherit !important; /* Наследуем выравнивание текста */
    }

    /* Дополнительно, если у ячеек с полями ввода есть специфичные стили, которые нужно сохранить */
    /* Например, если у ячеек есть padding, который нужно, чтобы текст внутри поля ввода тоже учитывал */
    /* Это обычно решается padding'ом на самой td */
    tbody td {
        /* Убедитесь, что у ячеек есть нужный padding */
        padding: 0.5em !important; /* Пример padding'а из общих правил */
    }

    thead th:nth-child(2) {
        text-align: center !important;
    }
    tbody td:nth-child(2) /* 2-я ячейка в строке тела таблицы (Наименование) */
    {
        min-width: 5cm !important; /* Устанавливаем минимальную ширину, можно настроить */
        width: auto !important; /* Позволяем ячейке расширяться, если текст длиннее мин. ширины */
        box-sizing: border-box;
        /* Убеждаемся, что текст в ячейке может переноситься */
        white-space: normal !important;
        word-wrap: break-word !important; /* Дополнительно разрешаем перенос внутри слов */
        text-align: left !important; /* <-- чётко задаём выравнивание слева */
    }
    /* !!! Убеждаемся, что поле ввода "Наименование" занимает всю ширину своей родительской ячейки !!! */
    td input.name-input {
        width: 100% !important; /* Занимаем 100% ширины родительской td */
        box-sizing: border-box;
        /* Перенос текста теперь лучше контролировать на уровне ячейки, но эти правила тоже не помешают */
        white-space: normal !important;
        word-wrap: break-word !important;
        height: auto !important; /* Позволяем полю растягиваться по высоте, если текст переносится */
        overflow: visible !important; /* Убеждаемся, что текст не скрывается */
        /* Остальные стили (border, background, padding, margin, color, box-shadow, color-adjust) уже заданы для input[type="text"] */
        border: none !important;
        background: transparent !important;
        padding: 0 !important;
        margin: 0 !important;
        box-shadow: none !important;
        color: #333 !important;
        -webkit-print-color-adjust: exact;
        color-adjust: exact;
    }
    /* Фиксированная ширина для ЯЧЕЙКИ количества (из предыдущего шага - сохраняем) */
    tbody td:nth-child(5),
    thead th:nth-child(5)
    {
        width: 2cm !important;
        min-width: 2cm !important;
        max-width: 2cm !important;
        box-sizing: border-box;
        overflow: hidden;
        text-align: center !important;
    }

    /* Поле ввода количества заполняет свою ячейку (из предыдущего шага - сохраняем) */
    td input.qty-input {
        width: 100% !important;
        box-sizing: border-box;
        border: none !important;
        background: transparent !important;
        padding: 0 !important;
        margin: 0 !important;
        box-shadow: none !important;
        color: #333 !important;
        -webkit-print-color-adjust: exact;
        color-adjust: exact;
    }
}

body {
    margin: 0;
    padding: 20px;
    background-color: #f8f9fa;
}

.container {
    min-height: 80vh;
    padding: 20px;
    /* overflow-x: auto; */ /* Удалите или закомментируйте */
    overflow-x: hidden; /* Скройте горизонтальное переполнение */
    margin-left: 0;
    margin-right: auto;
    margin-top: 0;
    margin-bottom: 0;
    transition: all 0.3s ease-in-out, left 0.3s ease;
}

/* --- СТИЛИ ДЛЯ ПОЛЬЗОВАТЕЛЬСКОГО СПИСКА ПРЕДЛОЖЕНИЙ --- */

/* Стили для ячейки, содержащей поле наименования и выпадающий список */
table tbody td:nth-child(2) {
    position: relative;
}


/* Стили для контейнера пользовательских предложений */
.suggestions-dropdown {
    display: none;
    position: absolute;
    top: 100%;
    left: 0;
    width: 100%;
    z-index: 1000;
    background-color: #fff;
    border: 1px solid #007bff;
    border-top: none;
    max-height: 250px;
    overflow-y: auto;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2);
    box-sizing: border-box;
    border-radius: 0 0 4px 4px;
}

/* Стили для отдельных элементов предложений */
.suggestions-dropdown .suggestion-item {
    padding: 0.7em 1em;
    cursor: pointer;
    border-bottom: 1px solid #eee;
    text-align: left;
    line-height: 1.4;
}

.suggestions-dropdown .suggestion-item:last-child {
    border-bottom: none;
}

.suggestions-dropdown .suggestion-item:hover {
    background-color: #f2f2f2;
}

.suggestions-dropdown .suggestion-item.highlighted {
     background-color: #e9e9e9;
}

/* Стили для многострочного содержимого */
.suggestions-dropdown .suggestion-item .main-line {
    font-weight: bold;
    word-break: break-word;
}

.suggestions-dropdown .suggestion-item .details-line {
     font-size: 0.9em;
     color: #666;
     margin-top: 0.3em;
     word-break: break-word;
}
/* style.css */

/* ... (существующие стили) ... */

body {
    margin: 0;
    padding: 0; /* Убираем padding у body, чтобы меню прилегало к краю */
    background-color: #f8f9fa;
    position: relative; /* Для позиционирования меню */
    overflow-x: hidden; /* Предотвращаем горизонтальный скролл при открытом меню */
    padding-top: 60px; /* Отрегулируйте это значение */
}

/* Стили для основного контейнера */
.container {
	min-height: 80vh;
    /* max-width убран, чтобы контент мог занимать всю ширину */
    padding: 20px; /* Возвращаем padding для контента */
    overflow-x: auto;
    margin-left: 0; /* Явно устанавливаем начальный левый отступ */
    margin-right: auto; /* Сохраняем auto для правого отступа (помогает в центрировании) */
    margin-top: 0; /* Убеждаемся, что верхний отступ 0 */
    margin-bottom: 0; /* Убеждаемся, что нижний отступ 0 */

    padding-bottom: 130px; /* Отрегулируйте это значение при необходимости */
  transition: all 0.3s ease-in-out, left 0.3s ease;
}

/* Кнопки действий внутри контейнера */
.action-buttons {
    position: static; /* Убираем fixed, т.к. родитель #app-header теперь fixed */
    top: auto;        /* Сбрасываем */
    right: auto;      /* Сбрасываем */
    z-index: auto;    /* Сбрасываем */
    background-color: transparent; /* Фон теперь у #app-header */
    padding: 0;                 /* Отступы теперь у #app-header или по необходимости */
    box-shadow: none;           /* Тень теперь у #app-header или по необходимости */
    margin-bottom: 0;           /* Сбрасываем, если не нужен дополнительный отступ */
    justify-content: flex-end;
    display: flex;
	padding-left: 15px;
}

/* --- Добавляем отступ к body, чтобы контент не перекрывался кнопками --- */
/* Нужно добавить верхний отступ к body, равный высоте закрепленных кнопок + небольшой зазор */
body {
    /* Оцените высоту вашего блока .action-buttons. Если высота кнопок с padding около 40-50px,
       установите padding-top немного больше, например, 60px. */
    padding-top: 60px; /* Отрегулируйте это значение */
    /* Если кнопки широкие и закреплены справа, может понадобиться padding-right, но обычно top/right достаточно */

    /* Остальные стили body... */
}

/* Кнопка-гамбургер */
.menu-toggle-btn {
    background: #007bff;
    color: white;
    border: none;
    padding: 9px 15px;
    font-size: 1.2em;
    cursor: pointer;
    border-radius: 10px;
    transition: opacity 0.3s ease; /* Добавляем плавное исчезновение */
}

.menu-toggle-btn:hover {
    background: #0056b3;
}

/* Стили для заголовка над таблицей */
.current-view-title {
    margin-top: 20px; /* Добавляем отступ сверху */
    margin-bottom: 0; /* Добавляем отступ снизу */
    font-size: 1.5em;
    color: #333;
}

/* ... (остальные стили) ... */
/* Боковое меню */
.side-menu {
    position: fixed;
    top: 0;
    left: -280px; /* Изначально скрыто за левым краем */
    width: 280px;
    height: 100%;
    background-color: #f8f9fa;
    border-right: 1px solid #dee2e6;
    box-shadow: 2px 0 5px rgba(0,0,0,0.1);
    z-index: 1050;
    transition: left 0.3s ease; /* Плавное появление */
    display: flex;
    flex-direction: column;
    padding-top: 80px; /* Отступ сверху для кнопки закрытия и заголовка */
    box-sizing: border-box;
}

.side-menu.open {
    left: 0; /* Показываем меню */
}
.close-menu-btn {
    display: none; /* Скрыто по умолчанию */
    background: none;
    border: none;
    font-size: 1.8em;
    cursor: pointer;
    color: #6c757d;
}
.close-menu-btn:hover {
    color: #343a40;
}

/* Сдвиг основного контента при открытом меню */
body.menu-open .container,
body.menu-open .fab {
    margin-left: 280px;
}
/* Сдвиг основного контента при открытом меню */
body.menu-open .menu-toggle-btn {
    /* Скрываем кнопку-гамбургер */
    opacity: 0;
    pointer-events: none; /* Делаем неактивной для кликов */
}

body.menu-open .close-menu-btn {
     /* Показываем кнопку закрытия */
     display: block;
}


/* Заголовок меню и кнопка закрытия */
.menu-header {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid #dee2e6;
    background-color: #e9ecef;
    box-sizing: border-box;
}

.menu-header h2 {
    margin: 0;
    font-size: 1.2em;
    color: #495057;
}

.close-menu-btn {
    background: none;
    border: none;
    font-size: 1.8em;
    cursor: pointer;
    color: #6c757d;
}
.close-menu-btn:hover {
    color: #343a40;
}


/* Список представлений */
.view-list {
    list-style: none;
    padding: 0;
    margin: 0;
    overflow-y: auto; /* Скролл, если много списков */
    flex-grow: 1; /* Занимает оставшееся место */
}

.view-item {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 12px 15px;
    cursor: pointer;
    border-bottom: 1px solid #e9ecef;
    position: relative; /* Для позиционирования dropdown */
}

.view-item:hover {
    background-color: #e9ecef;
}

.view-item.active-view {
    background-color: #cfe2ff;
    font-weight: bold;
    color: #0a58ca;
}

.view-item span {
    flex-grow: 1;
    margin-right: 10px; /* Отступ от кнопок */
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}

/* Кнопка троеточия и выпадающее меню действий */
.view-actions {
    position: relative; /* Контекст для позиционирования dropdown */
}

.ellipsis-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: #6c757d;
    padding: 5px;
    font-size: 0.9em;
}
.ellipsis-btn:hover {
    color: #343a40;
}

.actions-dropdown {
    display: none; /* Скрыто по умолчанию */
    position: absolute;
    right: 0;
    top: 100%; /* Появляется под кнопкой */
    background-color: white;
    border: 1px solid #ccc;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    border-radius: 4px;
    z-index: 1100; /* Выше других элементов меню */
    min-width: 120px;
}

/* Стили для кнопки троеточия и выпадающего меню действий */
.view-actions {
    position: relative; /* Контекст для позиционирования dropdown */
}

/* Стили для кнопки троеточия и выпадающего меню действий */
.view-actions {
    position: relative; /* Контекст для позиционирования dropdown */
}

.ellipsis-btn {
    background: none;
    border: none;
    cursor: pointer;
    color: #6c757d;
    padding: 5px; /* Небольшой паддинг для области клика/наведения */
    font-size: 0.9em;
    width: 30px; /* Задаем фиксированную ширину */
    height: 30px; /* Задаем фиксированную высоту */
    display: flex; /* Используем flexbox для центрирования иконки */
    justify-content: center; /* Центрирование по горизонтали */
    align-items: center; /* Центрирование по вертикали */
    border-radius: 50%; /* Делаем круглым */
    transition: background-color 0.2s ease, color 0.2s ease; /* Плавный переход */
}
.ellipsis-btn:hover {
    color: #343a40; /* Цвет иконки при наведении */
    background-color: rgba(0, 0, 0, 0.1); /* Затемненный фон */
}


.actions-dropdown {
    display: none; /* Скрыто по умолчанию */
    position: absolute;
    right: 0;
    top: 100%; /* Появляется под кнопкой */
    background-color: white;
    border: 1px solid #ccc;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    border-radius: 4px;
    z-index: 1100; /* Выше других элементов меню */
    min-width: 120px;
}

/* Показываем только при наличии класса 'show', который добавляется JS по клику */
.actions-dropdown.show {
    display: block;
}

.actions-dropdown a {
    display: block;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    font-size: 0.9em;
    white-space: nowrap;
}

.actions-dropdown a:hover {
    background-color: #f2f2f2;
}
.actions-dropdown {
    display: none; /* Скрыто по умолчанию */
    position: absolute;
    right: 0;
    top: 100%; /* Появляется под кнопкой */
    background-color: white;
    border: 1px solid #ccc;
    box-shadow: 0 2px 5px rgba(0,0,0,0.15);
    border-radius: 4px;
    z-index: 1100; /* Выше других элементов меню */
    min-width: 120px;
}

/* Показываем только при наличии класса 'show', который добавляется JS по клику */
.actions-dropdown.show {
    display: block;
}

.actions-dropdown a {
    display: block;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    font-size: 0.9em;
    white-space: nowrap;
}

.actions-dropdown a:hover {
    background-color: #f2f2f2;
}

.actions-dropdown a {
    display: block;
    padding: 8px 12px;
    text-decoration: none;
    color: #333;
    font-size: 0.9em;
    white-space: nowrap;
}

.actions-dropdown a:hover {
    background-color: #f2f2f2;
}

/* Кнопка "Добавить список" */
.add-view-button {
    display: block;
    width: calc(100% - 30px); /* Ширина минус паддинги */
    margin: 15px;
    padding: 10px;
    background-color: #198754; /* Зеленый */
    color: white;
    border: none;
    border-radius: 10px;
    cursor: pointer;
    text-align: center;
    font-size: 1em;
}
.add-view-button:hover {
    background-color: #157347;
}
.print-header-image {
    /* display: none; */ /* Удалите, если хотите видеть его всегда */
    display: block; /* Делает блок видимым и занимает всю ширину */
    text-align: center !important; /* <--- ДОБАВЛЕНО !important для гарантии центрирования */
    margin-top: 0.5em;
    margin-bottom: 0.5em;
    width: 100%; /* Убедимся, что блок занимает всю ширину */
    box-sizing: border-box; /* Учитываем padding в ширине */
}

/* Стилизация самого изображения (для контроля размера в обычном режиме) */
.print-header-image img {
    max-width: 100%; /* Размер изображения */
    height: auto;
    /* Убедитесь, что нет float: left; или text-align на самом img */
    /* float: none !important; */
    /* text-align: initial !important; */
}



/* Адаптация стилей печати */
@media print {
    /* Скрываем меню и его кнопку при печати */
    .menu-toggle-btn,
    .side-menu {
        display: none !important;
    }

    /* Убираем отступ слева у контента при печати - ЭТО ПРАВИЛО МОЖНО УДАЛИТЬ,
       так как сдвига нет совсем. Оставим на всякий случай, если были другие отступы. */
    body.menu-open .container,
    body.menu-open .fab {
        margin-left: 0 !important;
    }


    #app-header,
    #app-footer {
        display: none !important;
    }

/* Скрываем изображение по умолчанию */
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 100% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	
}

@media (max-width: 960px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
      /*
       * Вычисляем коэффициент масштабирования:
       * Текущая_ширина_окна_просмотра (100vw) / Ширина_точки_перелома (578).
       * При ширине экрана 578px масштаб будет 1 (оригинальный размер).
       * При ширине экрана меньше 578px масштаб будет меньше 1, пропорционально уменьшая всю таблицу.
       */
      transform: scale(1);
      /*
       * Важное замечание: Масштабированный элемент сохраняет свои
       * первоначальные размеры в потоке документа. Это может привести к
       * наложению элементов, идущих после таблицы, на масштабированную таблицу.
       * Полное решение этой проблемы может потребовать JavaScript для
       * динамической корректировки отступов или высоты контейнера.
       * В рамках чисто CSS-подхода это ограничение трансформации.
       */
  }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
        transform-origin: top left; /* Точка масштабирования: верхний левый угол */
        /*
         * Фактор масштабирования: Ширина окна просмотра / Базовая ширина (960px)
         * При 960px viewport масштаб = 1.0. Ниже 960px масштаб < 1.0.
         */
        transform: scale(calc(100vw / 960));

  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
   #product-table, #product-table th, #product-table td,
   #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
   }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }
}

  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    #product-table {
        transform-origin: top left; /* Масштабируем от верхнего левого угла */
        /*
         * Фактор масштабирования: (Текущая ширина контейнера) / (Ширина контейнера при 960px viewport)
         * Текущая ширина контейнера = calc(100vw - 40px) (если паддинг 20px)
         * Ширина контейнера при 960px viewport = 960px - 40px = 920px
         *
         * Используйте 920 в знаменателе. Замените 40px на сумму горизонтальных паддингов вашего контейнера.
         * Если таблица все равно обрезается справа, попробуйте немного уменьшить числитель, например, calc((100vw - 45px) / 920).
         */
        transform: scale(calc((100vw - 40px) / 920)); /* Формула масштабирования */

        /*
         * Управление пространством после масштабированной таблицы:
         * Возможно, потребуется добавить нижний отступ к контейнеру внутри этого медиазапроса.
         */
         /* Например: padding-bottom: 250px; /* Добавьте нужный отступ */
    }

    /*
     * Опционально: Установка минимального размера шрифта.
     */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
        font-size: max(10px, 0.8em); /* Пример */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
    padding: 9px 15px; /* Увеличиваем padding для большей области нажатия */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }
}
@media (max-width: 870px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.9);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 106%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }
}
@media (max-width: 780px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 80% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 80%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.8);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 119%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }
}
@media (max-width: 700px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 70% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 70%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.72);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 134%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }
}
@media (max-width: 630px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 65% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 65%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.64);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 147%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }

}
@media (max-width: 560px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 55% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 55%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.56);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 170%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }

}
@media (max-width: 500px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 50% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 50%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.5);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 185%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }

}
@media (max-width: 440px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 45% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 45%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.44);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 210%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }

}
@media (max-width: 400px) {
  /* Добавляем стили для header-content, чтобы разделить header-left и header-right */
  #app-header .header-content {
    display: flex; /* Убедимся, что это flex-контейнер */
    justify-content: space-between; /* Распределяем пространство между элементами */
    align-items: center; /* Выравнивание по центру по вертикали */
    width: 100%; 
  }
    .print-header-image {
        display: block !important; /* Убедимся, что он block при печати */
        text-align: center !important; /* <--- Убедимся, что !important есть и здесь */
        margin-top: 0.5em !important;
        margin-bottom: 1em !important;
        width: 40% !important; /* Убедимся, что занимает всю ширину при печати */
        box-sizing: border-box;
    }

    /* Стилизация самого изображения при печати */
    .print-header-image img {
         max-width: auto !important; /* Размер изображения при печати */
         height: auto !important;
         /* Убедитесь, что нет переопределений, мешающих центрированию */
         /* float: none !important; */
         /* text-align: initial !important; */
    }	 
	.print-header-text {
    display: flex; /* Уже flex */
    /* justify-content: space-between; */ /* <--- Возможно, эту строку можно убрать или изменить, т.к. flex-grow будет управлять */
    justify-content: center; /* Центрируем содержимое контейнера, но flex-grow элементов распределит пространство */
    align-items: center;
    width: 40%;
    margin-top: 1em;
    margin-bottom: 0.5em;
}

  #product-table {
      transform-origin: top left; /* Указываем точку масштабирования (верхний левый угол) */
        transform: scale(0.4);
    }
    .container { /* Применяем масштабирование К КОНТЕЙНЕРУ */
		width: 230%;
	}
  /*
   * Опционально: Если при сильном масштабировании текст становится совсем нечитаемым,
   * можно попробовать установить минимальный размер шрифта внутри масштабированной таблицы.
   * Это может немного нарушить идеальные пропорции, но улучшит удобство использования.
   */
    #product-table, #product-table th, #product-table td,
    #product-table input, #product-table span {
       font-size: max(10px, 0.8em); /* Пример: не меньше 10px и не меньше 0.7em от родительского размера */
    }
  
button#export-csv {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #28a745; /* Зеленый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    transition: background-color 0.2s ease-in-out;
}
button#print-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #007bff; /* Синий цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева от кнопки экспорта */
    transition: background-color 0.2s ease-in-out;
}
button#snapshot-table {
    padding: 0.8em 1.5em;
    font-size: 0.8em;
    color: #fff;
    background-color: #6c757d; /* Серый цвет */
    border: none;
    border-radius: 10px;
    cursor: pointer;
    margin-left: 0.5em; /* Отступ слева */
    transition: background-color 0.2s ease-in-out;
}
  .action-buttons {
    align-items: center;
    flex-wrap: nowrap; /* Убеждаемся, что кнопки остаются в одной строке */
    gap: 5px;
    /* Позволяем контейнеру сжиматься, если содержимое превышает доступную ширину */
    min-width: 0;
  }

  .action-buttons button {
    /* Используем относительные единицы (em) для лучшей адаптивности */
    padding: 0.5em 1em; /* Немного уменьшаем отступы */
    font-size: 0.9em; /* Используем em, размер шрифта будет зависеть от родительского элемента */
    color: white;
    background-color: #007bff;
    border: none;
    border-radius: 5px; /* Используем px или em для border-radius */
    cursor: pointer;
    transition: background-color 0.2s; /* Оставляем переход для hover эффекта */
    /* Позволяем кнопкам сжиматься и предотвращаем их бесконечное уменьшение */
    flex-shrink: 1; /* Разрешаем кнопке сжиматься */
    min-width: 0; /* Позволяем сжиматься ниже размера содержимого, если необходимо */
    box-sizing: border-box; /* Убеждаемся, что padding учитывается в общей ширине */
  }

  .action-buttons button:hover {
    background-color: #0056b3;
  }
  /* Кнопки троеточия в списке видов */
  .view-item .ellipsis-btn {
    padding: 10px; /* Увеличенный padding */
    font-size: 1.4em; /* Увеличиваем размер иконки */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопки удаления строки */
  .delete-btn {
    padding: 10px; /* Увеличенный padding вокруг символа '✕' */
    font-size: 1.3em; /* Увеличиваем размер символа '✕' */
    /* min-width: 44px; */ /* Минимальная площадь для нажатия (опционально) */
    /* min-height: 44px; */
  }

  /* Кнопка переключения меню (уже фиксирована, но можно немного скорректировать) */
  .menu-toggle-btn {
    font-size: 1.2em; /* Увеличиваем размер иконки */
  }

  /* Кнопка закрытия меню (размер иконки уже большой, добавляем padding) */
  .close-menu-btn {
    padding: 10px; /* Добавляем padding для удобства */
  }

  /* Кнопка "Добавить список" */
  .add-view-button {
    font-size: 1.1em; /* Немного увеличиваем шрифт */
    padding: 9px 12px; /* Увеличиваем padding */
  }

  /* Если выпадающий список автодополнения слишком узкий на маленьких экранах */
  .suggestions-dropdown {
    min-width: 180px; /* Увеличиваем минимальную ширину */
    /* width: 100%; */ /* Можно попробовать установить 100% ширины родительского элемента, если нужно */
  }

}
